import geometry;
import geometric_algebra;
import graphics;

# ------------------------------------------------------------------------------
# The rendered scene
# ------------------------------------------------------------------------------

define the_scene() =
    let 
        scene = empty_scene("Just some weird example to test graphics of vectors."),
        update(t, s) = set_arrows(s, [ update_arrow_color(t, x) | x <- get_arrows(s)])
    in
        add_arrows(rendered_vectors, add_updater(scene, update))
    end;

define update_arrow_color(t, arrow) =
    if mod(t, 10) = 0 then
        let color = arrow_color(arrow) in
            set_arrow_color(arrow,
                if color = "red" then
                    "green"
                else if color = "blue" then
                    "red"
                else
                    "blue"
                end)
        end
    else
        arrow
    end;

define rendered_vectors =
    let 
        ith_vec(i) = space_vec(expt(-0.5, i) * i, expt(0.5, i) * i^2, expt(0.5, i) * i^3),
        colored = [ tuple(orig, next - orig, color, name) | i <- naturals(50),
                                                      orig := ith_vec(i),
                                                      next := ith_vec(i+1),
                                                      color := if mod(i, 3) = 0 then "green" else if mod(i, 3) = 1 then "red" else "blue" end,
                                                      name := format("arr_%s", i)],
        factor = 8 * |metre|
    in
        [ named_arrow(factor '.*' from, factor '.*' to, color, name) | (from, to, color, name) <- colored]
    end;
