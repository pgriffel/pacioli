# Make a function on dimensionless matrices a function on dimensioned
# matrices. Or stated alternatively, apply a function to the magnitude
# of a dimensioned matrix.

import geometry;
import si;

declare dimmed :: for_index I, J: for_unit a, I!u, J!v:
    ((I! per J!) -> I! per J!) -> (a*I!u per J!v) -> a*I!u per J!v;

declare apply_mag :: for_index I, J: for_unit a, I!u, J!v:
    ((I! per J!) -> I! per J!, a*I!u per J!v) -> a*I!u per J!v;

define dimmed(f) =
    fn (x) f(magnitude(x)) * unit(x) end;

define apply_mag(f, x) =
    dimmed(f)(x);

apply_mag(fn(a) space_vec(1, 2, 3) + a end, space_vec(1*|metre|, 1*|metre|, 1*|metre|));


declare f :: for_index D, E: for_unit a, D!b, E!c:
     (a*D!b per E!c) -> (a*D!b per E!c) -> (a*D!b per E!c) -> (a*D!b per E!c) -> a*D!b per E!c;

declare g :: (1) -> (1) -> (1) -> (1) -> 1;

declare h :: for_unit a: (a) -> (a) -> (a) -> (a) -> a;

define f(a) =
    fn (b) fn (c) fn (d) a + b + c + d end end end;

define g = 
    fn (a) fn (b) fn (c) fn (d) 1 + a + b + c + d end end end end;

define h =
    fn (a) fn (b) fn (c) fn (d) 1 * a + b + c + d end end end end;

f(1)(2)(3)(4);

g(1)(2)(3)(4);

h (f(1)(2)(3)(4)) (2) (3) (h(1)(2)(3)(4));

h (f (1*|metre|) (2*|metre|) (3*|metre|) (4*|metre|))
  (2*|metre|)
  (3*|metre|)
  (h (1*|metre|) (2*|metre|) (3*|metre|) (4*|metre|));
