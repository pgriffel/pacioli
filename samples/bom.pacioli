module "BoM";

include "SI";

# ----------------------------------------------------------------------------
# Setup
# ----------------------------------------------------------------------------

defindex Product = 
  {Butter, Flour, Pastry, Apples, Sugar, ApplePie, PieceOfPie, CrateOfApples};

defunit Product!unit = {
  Butter: gram,
  Flour: gram, 
  Pastry: kilogram, 
  Apples: gram,
  Sugar: gram
};

defunit Product!trade_unit = {
  Butter: kilogram,
  Flour: kilogram, 
  Pastry: kilogram, 
  Apples: kilogram,
  CrateOfApples: 1,
  Sugar: kilogram
};

defconv conv :: Product!unit per Product!trade_unit;

# ----------------------------------------------------------------------------
# Input
# ----------------------------------------------------------------------------

defmatrix amount :: Product!trade_unit = {
  Apples -> 1000,
  Flour ->  1500
};

defmatrix price :: dollar/Product!trade_unit = {
  Apples -> 1.40,
  Flour ->  0.80
};

defmatrix bom :: Product!unit per Product!unit = {
  Apples, CrateOfApples ->  10000.00,
  Butter, Pastry ->           360.00,
  Flour, Pastry ->            550.00,
  Pastry, ApplePie ->           0.40,
  Apples, ApplePie ->         750.00,
  Sugar, ApplePie ->          225.00,
  Butter, ApplePie ->         115.00,
  ApplePie, PieceOfPie ->       0.12
};

# ----------------------------------------------------------------------------
# Computations
# ----------------------------------------------------------------------------

define trade_bom = conv^D .* bom .* conv;

bom;

trade_bom;

closure(trade_bom);

closure(trade_bom)^T;

closure(trade_bom)^T .* price;
