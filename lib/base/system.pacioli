# Copyright (c) 2018 Paul Griffioen
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

export
    _three_question_marks,
    _skip,
    _system_time,
    _asin,
    _acos,
    _atan,
    _atan2,
    _add_mut;

# ----------------------------------------------------------------------------
# System functions
# ----------------------------------------------------------------------------

declare _three_question_marks :: for_type t: () -> t;

# ----------------------------------------------------------------------------

declare _skip :: () -> Void;

# ----------------------------------------------------------------------------

doc _system_time
    "Number of milliseconds since some starting point.";

declare _system_time :: () -> 1;

# ----------------------------------------------------------------------------

declare _asin :: for_index P,Q: (P! per Q!) -> P! per Q!;

# ----------------------------------------------------------------------------

declare _acos :: for_index P,Q: (P! per Q!) -> P! per Q!;

# ----------------------------------------------------------------------------

declare _atan :: for_index P,Q: (P! per Q!) -> P! per Q!;

# ----------------------------------------------------------------------------

declare _atan2 ::
  for_index P,Q: for_unit a, P!u, Q!v: (a*P!u per Q!v, a*P!u per Q!v) -> P! per Q!;

# ----------------------------------------------------------------------------

declare _add_mut :: for_type a: (List(a), a) -> List(a);
